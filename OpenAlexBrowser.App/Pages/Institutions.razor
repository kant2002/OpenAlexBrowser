@page "/institutions"
@using OpenAlexNet;
@using System.Web;
@inject OpenAlexApi openAlex
<h1>
    Institutions
    @if (loading)
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
</h1>

<form class="row g-3" @onsubmit=Search>
    <div class="col-12">
        <InputText id="search" @bind-Value="@SearchField" class="form-control" placeholder="Institution name to find" aria-label="Search institution field" />
    </div>
    <div class="col-12">
        <button type="submit" class="btn btn-primary" @onclick="Search">Search</button>
    </div>
</form>

@if (foundInstitutions is not null)
{
    <p>Found: @expectedCount institutions</p>

    @foreach (var institution in foundInstitutions.OrderByDescending(_ => _.DisplayName))
    {
        <text>@institution.DisplayName &nbsp;</text>
        @if (institution.Ror != null)
        {
            <a href="@("works?ror=" + institution.Ror.Replace("https://ror.org/", ""))">ROR</a><text>:</text> @institution.Ror
            <text>&nbsp;</text>
        }

        <NavLink href="@("works?search=" + HttpUtility.UrlPathEncode(institution.DisplayName))">Search for works</NavLink>
    }
}

@code {
    [SupplyParameterFromQuery(Name = "search")]
    [Parameter]
    public string? SearchField { get; set; }
    bool loading;
    int expectedCount;
    List<Institution>? foundInstitutions;

    async Task Search()
    {
        if (SearchField is null)
        {
            return;
        }

        foundInstitutions = null;
        loading = true;

        try
        {
            expectedCount = 0;
            int page = 1;
            var filter = new InstitutionsFilter();
            filter.DefaultSearch(SearchField);

            var institutions = await openAlex.FindInstitutionsAsync(filter, page);
            if (institutions is null)
            {
                return;
            }

            expectedCount = institutions.Meta.Count ?? 0;
            foundInstitutions = new();
            while (institutions.Meta.PerPage * institutions.Meta.Page < institutions.Meta.Count)
            {
                foundInstitutions.AddRange(institutions.Results);
                StateHasChanged();

                page++;
                institutions = await openAlex.FindInstitutionsAsync(filter, page);
                if (institutions is null)
                {
                    return;
                }
            }

            foundInstitutions.AddRange(institutions.Results);
        }
        finally
        {
            loading = false;
        }
    }

}
